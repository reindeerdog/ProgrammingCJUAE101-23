#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>

#define ARRAY_SIZE 100
#define SELECT_SIZE 10

// 배열에 무작위 정수를 채우는 함수
void generateRandomNumbers(int* array, int size, int min, int max) 
{
    for (int i = 0; i < size; i++) 
    {
        array[i] = rand() % (max - min + 1) + min;
    }
}

// 배열에서 무작위로 특정 개수의 정수를 선택하는 함수
void selectRandomSubset(int* array, int* subset, int arraySize, int subsetSize) 
{
    for (int i = 0; i < subsetSize; i++) 
    {
        int randomIndex = rand() % arraySize;
        subset[i] = array[randomIndex];
    }
}

// 배열의 총합, 분산, 표준편차를 계산하는 함수
void calculateStatistics(int* array, int size, double* sum, double* variance, double* stdDev) 
{
    *sum = 0;
    double mean;

    // 총합 계산
    for (int i = 0; i < size; i++) 
    {
        *sum += array[i];
    }

    // 평균 계산
    mean = *sum / size;

    // 분산 계산
    *variance = 0;
    for (int i = 0; i < size; i++) 
    {
        *variance += pow(array[i] - mean, 2);
    }
    *variance /= size;

    // 표준편차 계산
    *stdDev = sqrt(*variance);
}

int main(void) 
{
    int numbers[ARRAY_SIZE]; // 100개의 숫자를 저장할 배열
    int selected[SELECT_SIZE]; // 선택된 10개의 숫자를 저장할 배열
    double sum = 0, variance = 0, stdDev = 0;

    int minRange = 1, maxRange = 100; // 난수 생성 범위
    srand(time(NULL)); // 난수 시드 초기화

    // 100개의 무작위 숫자 생성
    generateRandomNumbers(numbers, ARRAY_SIZE, minRange, maxRange);

    // 100개 중 10개의 숫자 무작위 선택
    selectRandomSubset(numbers, selected, ARRAY_SIZE, SELECT_SIZE);

    // 통계 계산
    calculateStatistics(selected, SELECT_SIZE, &sum, &variance, &stdDev);

    // 결과 출력
    printf("선택된 숫자들: ");
    for (int i = 0; i < SELECT_SIZE; i++) 
    {
        printf("%d ", selected[i]);
    }
    printf("\n총합: %.2f\n", sum);
    printf("분산: %.2f\n", variance);
    printf("표준편차: %.2f\n", stdDev);

    return 0;
}
